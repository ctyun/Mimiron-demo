{
    "project": {
        "name": "Mimiron",
        "description": "Mimiron API",
        "version": "0.1.0"
    },
    "files": {
        "components\\BSSFrame\\frame.js": {
            "name": "components\\BSSFrame\\frame.js",
            "modules": {
                "BSSFrame": 1
            },
            "classes": {
                "BSSFrame": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\BSSFrame\\sidebar.js": {
            "name": "components\\BSSFrame\\sidebar.js",
            "modules": {},
            "classes": {
                "SideBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\BSSFrame\\topbar.js": {
            "name": "components\\BSSFrame\\topbar.js",
            "modules": {},
            "classes": {
                "TopBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\bar\\BasicColumn.js": {
            "name": "components\\echarts\\components\\bar\\BasicColumn.js",
            "modules": {
                "ECharts": 1
            },
            "classes": {
                "BasicColumn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\bar\\StackedColumn.js": {
            "name": "components\\echarts\\components\\bar\\StackedColumn.js",
            "modules": {},
            "classes": {
                "StackedColumn": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\line\\BasicArea.js": {
            "name": "components\\echarts\\components\\line\\BasicArea.js",
            "modules": {},
            "classes": {
                "BasicArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\line\\BasicLine.js": {
            "name": "components\\echarts\\components\\line\\BasicLine.js",
            "modules": {},
            "classes": {
                "BasicLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\line\\IrregularLine.js": {
            "name": "components\\echarts\\components\\line\\IrregularLine.js",
            "modules": {},
            "classes": {
                "IrregularLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\line\\StackedArea.js": {
            "name": "components\\echarts\\components\\line\\StackedArea.js",
            "modules": {},
            "classes": {
                "StackedArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\line\\StackedLine.js": {
            "name": "components\\echarts\\components\\line\\StackedLine.js",
            "modules": {},
            "classes": {
                "StackedLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\pie\\BasicPie.js": {
            "name": "components\\echarts\\components\\pie\\BasicPie.js",
            "modules": {},
            "classes": {
                "BasicPie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\wordCloud\\WordCloud.js": {
            "name": "components\\echarts\\components\\wordCloud\\WordCloud.js",
            "modules": {},
            "classes": {
                "WordCloud": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\components\\AbstractECharts.js": {
            "name": "components\\echarts\\components\\AbstractECharts.js",
            "modules": {},
            "classes": {
                "AbstractECharts": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\echarts\\echarts.js": {
            "name": "components\\echarts\\echarts.js",
            "modules": {},
            "classes": {
                "ECharts": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\autocomplete.js": {
            "name": "components\\html\\autocomplete.js",
            "modules": {
                "html": 1
            },
            "classes": {
                "Autocomplete": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\autoselect.js": {
            "name": "components\\html\\autoselect.js",
            "modules": {},
            "classes": {
                "AutoSelect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\button.js": {
            "name": "components\\html\\button.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\cascade_select.js": {
            "name": "components\\html\\cascade_select.js",
            "modules": {},
            "classes": {
                "CascadeSelect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\checkbox.js": {
            "name": "components\\html\\checkbox.js",
            "modules": {},
            "classes": {
                "Checkbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\checkboxgroup.js": {
            "name": "components\\html\\checkboxgroup.js",
            "modules": {},
            "classes": {
                "CheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\datepicker.js": {
            "name": "components\\html\\datepicker.js",
            "modules": {},
            "classes": {
                "DatePicker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\expression.js": {
            "name": "components\\html\\expression.js",
            "modules": {},
            "classes": {
                "ExpressionSelect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\form.js": {
            "name": "components\\html\\form.js",
            "modules": {},
            "classes": {
                "BSSForm": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\input.js": {
            "name": "components\\html\\input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\select.js": {
            "name": "components\\html\\select.js",
            "modules": {},
            "classes": {
                "Select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\html\\textarea.js": {
            "name": "components\\html\\textarea.js",
            "modules": {},
            "classes": {
                "Textarea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\message\\message.js": {
            "name": "components\\message\\message.js",
            "modules": {
                "message": 1
            },
            "classes": {
                "message": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\message\\messageBox.js": {
            "name": "components\\message\\messageBox.js",
            "modules": {},
            "classes": {
                "MessageBox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\message\\modal.js": {
            "name": "components\\message\\modal.js",
            "modules": {},
            "classes": {
                "Modal": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\page\\grid.js": {
            "name": "components\\page\\grid.js",
            "modules": {},
            "classes": {
                "Grid": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\page\\page.js": {
            "name": "components\\page\\page.js",
            "modules": {
                "page": 1
            },
            "classes": {
                "Pager": 1,
                "PageButton": 1,
                "PageItem": 1
            },
            "fors": {
                "PageButton": 1
            },
            "namespaces": {}
        },
        "components\\page\\pagesizeselect.js": {
            "name": "components\\page\\pagesizeselect.js",
            "modules": {},
            "classes": {
                "PageSizeSelect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\panel\\header.js": {
            "name": "components\\panel\\header.js",
            "modules": {},
            "classes": {
                "Header": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\panel\\panel.js": {
            "name": "components\\panel\\panel.js",
            "modules": {},
            "classes": {
                "BSSPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\panel\\query-panel.js": {
            "name": "components\\panel\\query-panel.js",
            "modules": {},
            "classes": {
                "QueryPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\panel\\table-panel.js": {
            "name": "components\\panel\\table-panel.js",
            "modules": {
                "TablePanel": 1
            },
            "classes": {
                "TablePanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\panel\\tool-panel.js": {
            "name": "components\\panel\\tool-panel.js",
            "modules": {
                "panel": 1
            },
            "classes": {
                "ToolBarPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\tabs\\tab.js": {
            "name": "components\\tabs\\tab.js",
            "modules": {
                "tabs": 1
            },
            "classes": {
                "Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\tabs\\tabs.js": {
            "name": "components\\tabs\\tabs.js",
            "modules": {},
            "classes": {
                "Tabs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\tencentMap\\map.js": {
            "name": "components\\tencentMap\\map.js",
            "modules": {
                "TencentMap": 1
            },
            "classes": {
                "TencentMap": 1
            },
            "fors": {
                "window": 1
            },
            "namespaces": {}
        },
        "components\\tree\\treeWithTable.js": {
            "name": "components\\tree\\treeWithTable.js",
            "modules": {
                "tree": 1
            },
            "classes": {
                "TreeWithTable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "components\\tree\\treeview.js": {
            "name": "components\\tree\\treeview.js",
            "modules": {},
            "classes": {
                "Treeview": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "BSSFrame": {
            "name": "BSSFrame",
            "submodules": {},
            "elements": {},
            "classes": {
                "BSSFrame": 1,
                "SideBar": 1,
                "TopBar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\BSSFrame\\topbar.js",
            "line": 7
        },
        "ECharts": {
            "name": "ECharts",
            "submodules": {},
            "elements": {},
            "classes": {
                "BasicColumn": 1,
                "StackedColumn": 1,
                "BasicArea": 1,
                "BasicLine": 1,
                "IrregularLine": 1,
                "StackedArea": 1,
                "StackedLine": 1,
                "BasicPie": 1,
                "WordCloud": 1,
                "AbstractECharts": 1,
                "ECharts": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\echarts\\echarts.js",
            "line": 13,
            "description": "ECharts 图表组件",
            "author": "czdujianbin 2015-09-23 14:36:41"
        },
        "html": {
            "name": "html",
            "submodules": {},
            "elements": {},
            "classes": {
                "Autocomplete": 1,
                "AutoSelect": 1,
                "Button": 1,
                "CascadeSelect": 1,
                "Checkbox": 1,
                "CheckboxGroup": 1,
                "DatePicker": 1,
                "ExpressionSelect": 1,
                "BSSForm": 1,
                "Input": 1,
                "Select": 1,
                "Textarea": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\html\\textarea.js",
            "line": 6
        },
        "message": {
            "name": "message",
            "submodules": {},
            "elements": {},
            "classes": {
                "message": 1,
                "MessageBox": 1,
                "Modal": 1,
                "Grid": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\page\\grid.js",
            "line": 5
        },
        "page": {
            "name": "page",
            "submodules": {},
            "elements": {},
            "classes": {
                "Pager": 1,
                "PageButton": 1,
                "PageItem": 1,
                "PageSizeSelect": 1
            },
            "fors": {
                "PageButton": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "components\\page\\pagesizeselect.js",
            "line": 7,
            "description": "Created by chenth on 15-7-10.\n表格分页组件",
            "example": [
                "\n```\n使用说明\n<PageButton  doList={this.doList} pageSize={this.state.pageSize}  page={this.state.offset} totalRows={this.state.totalRows}/>\n＊doList:回调ajax请求的方法，加载列表数据\n＊pageSize：页面大小\n＊page:当前页面\n＊totalRows:总行数\n```"
            ]
        },
        "panel": {
            "name": "panel",
            "submodules": {},
            "elements": {},
            "classes": {
                "Header": 1,
                "BSSPanel": 1,
                "QueryPanel": 1,
                "ToolBarPanel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\panel\\tool-panel.js",
            "line": 6
        },
        "TablePanel": {
            "name": "TablePanel",
            "submodules": {},
            "elements": {},
            "classes": {
                "TablePanel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\panel\\table-panel.js",
            "line": 9
        },
        "tabs": {
            "name": "tabs",
            "submodules": {},
            "elements": {},
            "classes": {
                "Tab": 1,
                "Tabs": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\tabs\\tabs.js",
            "line": 7
        },
        "TencentMap": {
            "name": "TencentMap",
            "submodules": {},
            "elements": {},
            "classes": {
                "TencentMap": 1,
                "window": 1
            },
            "fors": {
                "window": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "components\\tencentMap\\map.js",
            "line": 8,
            "description": "地图模块(使用腾讯地图)"
        },
        "tree": {
            "name": "tree",
            "submodules": {},
            "elements": {},
            "classes": {
                "TreeWithTable": 1,
                "Treeview": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "components\\tree\\treeview.js",
            "line": 9
        }
    },
    "classes": {
        "BSSFrame": {
            "name": "BSSFrame",
            "shortname": "BSSFrame",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BSSFrame",
            "namespace": "",
            "file": "components\\BSSFrame\\frame.js",
            "line": 8,
            "description": "用于天翼云业务管理系统的页面框架",
            "deprecated": true,
            "deprecationMessage": "直接使用Topbar和Sidebar."
        },
        "SideBar": {
            "name": "SideBar",
            "shortname": "SideBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BSSFrame",
            "namespace": "",
            "file": "components\\BSSFrame\\sidebar.js",
            "line": 26,
            "description": "侧边目录组件, 为了实现多页面应用, 应该加一个参数, 设置选中哪个菜单项.\n```\n示例:\n<SideBar list={this.props.menu} />\n```"
        },
        "TopBar": {
            "name": "TopBar",
            "shortname": "TopBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BSSFrame",
            "namespace": "",
            "file": "components\\BSSFrame\\topbar.js",
            "line": 7,
            "description": "导航条组件\n```\n示例:\n<TopBar logout={this._logout} userName={this.props.userName}/>\n```"
        },
        "BasicColumn": {
            "name": "BasicColumn",
            "shortname": "BasicColumn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\bar\\BasicColumn.js",
            "line": 15,
            "description": "BasicColumn Chart\n```\n\nvar data = [\n    {\n        name : \"测试1\",\n       data : [90, 113, 140, 30, 70, 60]\n    },\n      {\n          name : \"测试2\",\n          data : [190, 213, 240, 230, 70, 260]\n      },\n  ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <BasicColumn data={data} xAxisName={xAxisName}/>\n\n  Advance use:\n  <BasicColumn title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n\n```",
            "extends": "AbstractECharts"
        },
        "StackedColumn": {
            "name": "StackedColumn",
            "shortname": "StackedColumn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\bar\\StackedColumn.js",
            "line": 15,
            "description": "StackedColumn Chart\n```\n\nvar data = [\n    {\n        name : \"测试1\",\n       data : [90, 113, 140, 30, 70, 60]\n    },\n      {\n          name : \"测试2\",\n          data : [190, 213, 240, 230, 70, 260]\n      },\n  ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <StackedColumn data={data} xAxisName={xAxisName}/>\n\n  Advance use:\n  <StackedColumn title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n  \n```",
            "extends": "AbstractECharts"
        },
        "BasicArea": {
            "name": "BasicArea",
            "shortname": "BasicArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\line\\BasicArea.js",
            "line": 15,
            "description": "BasicArea Chart\n```\n \nvar data = [\n    {\n        name : \"测试1\",\n       data : [90, 113, 140, 30, 70, 60]\n    },\n      {\n          name : \"测试2\",\n          data : [190, 213, 240, 230, 70, 260]\n      },\n  ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <BasicArea  data={data} xAxisName={xAxisName}/>\n\n  Advance use:\n  <BasicArea  title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n  \n```",
            "extends": "AbstractECharts"
        },
        "BasicLine": {
            "name": "BasicLine",
            "shortname": "BasicLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\line\\BasicLine.js",
            "line": 15,
            "description": "Basic Line Chart\n```\n\nvar data = [\n    {\n        name : \"测试1\",\n       data : [90, 113, 140, 30, 70, 60]\n    },\n      {\n          name : \"测试2\",\n          data : [190, 213, 240, 230, 70, 260]\n      },\n  ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <BasicLine data={data} xAxisName={xAxisName}/>\n\n  Advance use:\n  <BasicLine title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n  \n```",
            "extends": "AbstractECharts"
        },
        "IrregularLine": {
            "name": "IrregularLine",
            "shortname": "IrregularLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\line\\IrregularLine.js",
            "line": 15,
            "description": "Irregular Line Chart\n```\n\nvar data = [\n    {\n        name : \"测试1\",\n       data : [90, 113, 140, 30, 70, 60]\n    },\n      {\n          name : \"测试2\",\n          data : [190, 213, 240, 230, 70, 260]\n      },\n  ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <IrregularLine data={data} xAxisName={xAxisName}/>\n\n  Advance use:\n  <IrregularLine title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n  \n```",
            "extends": "AbstractECharts"
        },
        "StackedArea": {
            "name": "StackedArea",
            "shortname": "StackedArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\line\\StackedArea.js",
            "line": 15,
            "description": "StackedArea Chart\n```\n\nvar data = [\n    {\n        name : \"测试1\",\n       data : [90, 113, 140, 30, 70, 60]\n    },\n      {\n          name : \"测试2\",\n          data : [190, 213, 240, 230, 70, 260]\n      },\n  ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <StackedArea data={data} xAxisName={xAxisName}/>\n\n  Advance use:\n  <StackedArea title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n  \n```",
            "extends": "AbstractECharts"
        },
        "StackedLine": {
            "name": "StackedLine",
            "shortname": "StackedLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\line\\StackedLine.js",
            "line": 15,
            "description": "StackedLine Chart\n```\n\nvar data = [\n    {\n        name : \"测试1\",\n        data : [90, 113, 140, 30, 70, 60]\n    },\n    {\n        name : \"测试2\",\n        data : [190, 213, 240, 230, 70, 260]\n    },\n];\n\nvar xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\nsimple use:\n<StackedLine id=\"chart1\" data={data} xAxisName={xAxisName}/>\n\nAdvance use:\n<StackedLine id=\"test\" title=\"曲线测试\" subtitle=\"这是一个副标题测试\" height=\"800px\" width=\"100%\" trigger=\"item\" theme=\"macarons\" data={data} xAxisName={xAxisName} smooth={true}/>\n\n```",
            "extends": "AbstractECharts"
        },
        "BasicPie": {
            "name": "BasicPie",
            "shortname": "BasicPie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\pie\\BasicPie.js",
            "line": 15,
            "description": "Basic Pie Chart\n```\n\n  var data = [\n        {\n            name:'访问来源',\n            data:[\n                {value:335, name:'直接访问'},\n                {value:310, name:'邮件营销'},\n                {value:234, name:'联盟广告'},\n                {value:135, name:'视频广告'},\n                {value:1548, name:'搜索引擎'}\n            ]\n        }\n    ];\n\n  var xAxisName = ['周一','周二','周三','周四','周五','周六','周日'];\n\n  simple use:\n  <BasicPie data={data} />\n\n  Advance use:\n  <BasicPie  title=\"BasicPie\" subtitle=\"BasicPie subtitle\" height=\"800px\" width=\"100%\"  theme=\"macarons\" data={data} />\n  \n```",
            "extends": "AbstractECharts"
        },
        "WordCloud": {
            "name": "WordCloud",
            "shortname": "WordCloud",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\wordCloud\\WordCloud.js",
            "line": 15,
            "description": "Basic Line Chart\n```\n\nvar data = [\n    {\n        name: \"Macys\",\n        value: 6181\n    },\n    {\n        name: \"Amy Schumer\",\n        value: 4386\n    }\n  ];\n  \n  simple use:\n  <WordCloud data={data} />\n \n  Advance use:\n  <WordCloud title=\"WordCloud\" subtitle=\"WordCloud subtitile\" height=\"800px\" width=\"100%\" theme=\"macarons\" data={data} />\n  \n```",
            "extends": "AbstractECharts"
        },
        "AbstractECharts": {
            "name": "AbstractECharts",
            "shortname": "AbstractECharts",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 10,
            "description": "Abstract ECharts"
        },
        "ECharts": {
            "name": "ECharts",
            "shortname": "ECharts",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ECharts",
            "namespace": "",
            "file": "components\\echarts\\echarts.js",
            "line": 13,
            "description": "EChart图表React实现，支持echart官方option设置,具体设置请查看官网\n```\n\nvar option = {\n        title : {\n               text: '未来一周气温变化',\n               subtext: '纯属虚构'\n           },\n           tooltip : {\n               trigger: 'axis'\n           },\n           legend: {\n               data:['最高气温','最低气温']\n           },\n           toolbox: {\n               show : true,\n               feature : {\n                   mark : {show: true},\n                   dataView : {show: true, readOnly: false},\n                   magicType : {show: true, type: ['line', 'bar']},\n                   restore : {show: true},\n                   saveAsImage : {show: true}\n               }\n           },\n           calculable : true,\n           xAxis : [\n               {\n                   type : 'category',\n                   boundaryGap : false,\n                   data : ['周一','周二','周三','周四','周五','周六','周日']\n               }\n           ],\n           yAxis : [\n               {\n                   type : 'value',\n                   axisLabel : {\n                       formatter: '{value} °C'\n                   }\n               }\n           ],\n           series : [\n               {\n                   name:'最高气温',\n                   type:'line',\n                   data:[11, 11, 15, 13, 12, 13, 10],\n                   markPoint : {\n                       data : [\n                           {type : 'max', name: '最大值'},\n                           {type : 'min', name: '最小值'}\n                       ]\n                   },\n                   markLine : {\n                       data : [\n                           {type : 'average', name: '平均值'}\n                       ]\n                   }\n               },\n               {\n                   name:'最低气温',\n                   type:'line',\n                   data:[1, -2, 2, 5, 3, 2, 0],\n                   markPoint : {\n                       data : [\n                           {name : '周最低', value : -2, xAxis: 1, yAxis: -1.5}\n                       ]\n                   },\n                   markLine : {\n                       data : [\n                           {type : 'average', name : '平均值'}\n                       ]\n                   }\n               }\n           ]\n       };\n\n   simple use:\n   <ECharts id=\"chart1\" height=\"800px\" width=\"100%\" option={option}/>\n   \n```",
            "extends": "AbstractECharts"
        },
        "Autocomplete": {
            "name": "Autocomplete",
            "shortname": "Autocomplete",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\autocomplete.js",
            "line": 13,
            "description": "自动完成\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar Autocomplete=components.Autocomplete;\nvar AutocompleteDemo=React.createClass(\n    render:function(){\n        return (<Autocomplete name=\"动态下拉\" url=\"/api/test/ajax\" />);\n    }\n);\n```"
        },
        "AutoSelect": {
            "name": "AutoSelect",
            "shortname": "AutoSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\autoselect.js",
            "line": 7,
            "description": "```\n使用方法\nvar React = components.React;\nvar AutoSelect=components.AutoSelect;\nvar AutoSelectDemo=React.createClass(\n    render:function(){\n        return (<AutoSelect url=\"api/test/autoselect\" disName=\"动态select\" onSelect={this.autoSeleect} defaultValue=\"333\" />);\n    }\n);\n使用说明\n通过url自动加载select\n <AutoSelect url=\"api/test/autoselect\" disName=\"动态select\" onSelect={this.autoSeleect} defaultValue=\"333\" />\n disName:显示在左边的名称\n url:动态换取下拉列表后台请求url,请求方式get, 返回数据格式为：[{value:'1',text:'显示2'},{value:'2',text:'显示1'}]\n defaultValue:默认要显示的值\n onSelect：选重下拉列表的值所触发的事件\n```",
            "uses": [
                "Select"
            ]
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\button.js",
            "line": 7,
            "description": "按钮组件\n```\n使用方法\nvar React = components.React;\nvar Button=components.Button;\nvar ButtonDemo=React.createClass(\n    render:function(){\n        return ( <Button actions=[] code=\"\" btnName=\"增加\" disabled={this.state.dis} disabledName=\"正在请求......\" doAction={this._doAction}/>);\n    }\n);\n\n使用说明\n<Button actions=[] code=\"\" btnName=\"增加\" disabled={this.state.dis} disabledName=\"正在请求......\" doAction={this._doAction}/>\ndisabled:些属性判断按钮是否可用disabled：true此按钮不可用\ndisabledName：不可用时显示的名称\ndoAction:当点击该按钮时调用parent中的方法去执行\nid:按钮的id, 用于直接操作DOM, 一般不应传入此参数\ncssClass(String):按钮的显示样式,与Bootstrap相同,可选值包括:\nbtn-default : 白色按钮样式;\nbtn-primary : 蓝色按钮, 如果不传入此参数,取此值为默认值;\nbtn-success : 绿色按钮, 一般表示成功;\nbtn-info    : 浅蓝色按钮, 一般表示信息;\nbtn-warning : 橙色按钮, 一般表示警告;\nbtn-danger  : 红色按钮, 一般表示严重警告;\nbtn-lg      : 尺寸设置为大;\nbtn-sm      : 尺寸设置为小;\nbtn-xs      : 尺寸设置为极小;\nbtn-block   : 尺寸将填充满父元素;\nactive      : 按钮将直接显示为已被按下.\n允许同时传入颜色和尺寸两个参数, 比如:\"btn-danger btn-xs\", 除此之外, 还有一些不常用的取值请参考Bootstrap官方网站.\ncustomClass(String): 按照用户自定义的style进行显示, 自定义style代码需要放入css/style.css\nactions:该菜单所有的操作编码\ncode:当前按钮的操作编码\n```"
        },
        "CascadeSelect": {
            "name": "CascadeSelect",
            "shortname": "CascadeSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\cascade_select.js",
            "line": 7,
            "description": "二级联动select\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar CascadeSelect=components.CascadeSelect;\nvar CascadeSelectDemo=React.createClass(\n    render:function(){\n        return (<CascadeSelect firstDisName=\"一级\" secondDisName=\"二级\"  firsDefaultValue=\"2\" data={[{value:'1',text:'显示2'},{value:'2',text:'显示1'}]} url=\"api/test/autoselect\"  />);\n    }\n);\n使用说明\n<CascadeSelect firstDisName=\"一级\" secondDisName=\"二级\"  firsDefaultValue=\"2\" data={[{value:'1',text:'显示2'},{value:'2',text:'显示1'}]} url=\"api/test/autoselect\"  />\nfirstDisName:一级显示名称\nsecondDisName:二级显示名称\nfirsDefaultValue:一级显示值\ndata:一级下拉填充数据\nurl:一级下拉选择时，二级下拉联动时后台请求的url\n```"
        },
        "Checkbox": {
            "name": "Checkbox",
            "shortname": "Checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "CheckboxGroup"
            ],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\checkbox.js",
            "line": 8,
            "description": "```\n注意: 需要放在CheckboxGroup中使用\n<Checkbox id=\"1\" dispName=\"checkbox1\" value=\"1\" onClick={this.checkboxClick}/>\n```"
        },
        "CheckboxGroup": {
            "name": "CheckboxGroup",
            "shortname": "CheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\checkboxgroup.js",
            "line": 8,
            "description": "```\n <CheckboxGroup name=\"demo-checkboxgroup\" inline={false} multi={true}>\n       <Checkbox id=\"1\" dispName=\"checkbox1\" value=\"1\" onClick={this.checkboxClick}/>\n       <Checkbox id=\"2\" dispName=\"checkbox2\" value=\"2\" onClick={this.checkboxClick}/>\n   </CheckboxGroup>\n```",
            "uses": [
                "Checkbox"
            ]
        },
        "DatePicker": {
            "name": "DatePicker",
            "shortname": "DatePicker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\datepicker.js",
            "line": 7,
            "description": "日期选择组件\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar DataPicker=components.DataPicker;\nvar DataPickerDemo=React.createClass(\n    render:function(){\n        return (<DataPicker id=\"startTime_id\"  name=\"时间\" dateFormat=\"yy-mm\"/>);\n    }\n);\n使用说明\n<DataPicker id=\"startTime_id\"  name=\"时间\" dateFormat=\"yy-mm\"/>\n id:该组件的id要唯一\n name:日期组件显示的名称\n dateFormat：日期格式类型 yy-mm格式化为年－月,yy-mm-dd格化为年－月－日\n 要想获取该日期所选择的值，调用DatePicker.getDataValue()方法\n```"
        },
        "ExpressionSelect": {
            "name": "ExpressionSelect",
            "shortname": "ExpressionSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\expression.js",
            "line": 7,
            "description": "查询表达式列表组件\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar ExpressionSelect=components.ExpressionSelect;\nvar ExpressionSelectDemo=React.createClass(\n    render:function(){\n        return (<ExpressionSelect onSelect={_onSelect} />);\n    }\n);\n使用说明\n<ExpressionSelect onSelect={_onSelect} />\nonSelect 选择表达式回调事件\n```"
        },
        "BSSForm": {
            "name": "BSSForm",
            "shortname": "BSSForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\form.js",
            "line": 9,
            "description": "表单组件\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar BSSForm=components.BSSForm;\nvar BSSFormDemo=React.createClass(\n    render:function(){\n        return ( <BSSForm submitAction={this.submitAction} jsonFormat=true disabledName＝\"不可用\" disabledSubmitBtn＝“false” okButtonName=\"保存\"></BSSForm>);\n    }\n);\n使用说明\n\n* <BSSForm submitAction={this.submitAction} jsonFormat=true disabledName＝\"不可用\" disabledSubmitBtn＝“false” okButtonName=\"保存\"></BSSForm>\nsubmitAction(必须）\n  form表单按钮提交时回调方法\n jsonFormat  true|false\n   form表单序列化数据是否为json格式\nokButtonName\n  此参数非必须\n form表单按钮名称默认为查询\n disabledSubmitBtn:true|false 默认为false\n     此参数非必须\n  是否在提交form表达时禁用提交按钮\n disabledName:\n  此参数非必须\n  禁用提交按钮时显示的名称\n\n此组件使用可参考QueryPanel使用\n```"
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\input.js",
            "line": 27,
            "description": "input输入组件\n  ```\n  使用方法\n var React = require('react');\n var components=require(\"components\");\n var Input=components.Input;\n var InputDemo=React.createClass(\n     render:function(){\n         return (<Input disName=\"名称\" doChange={this._doChange}  />);\n     }\n );\n  使用说明\n  <Input disName=\"名称\" doChange={this._doChange}  />\n  disName:要显示的名称\n  doChange:值改变时调用的事件\n  onClick:点击时调用的事件\n  value:默认值\n  ```"
        },
        "Select": {
            "name": "Select",
            "shortname": "Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "AutoSelect"
            ],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\select.js",
            "line": 5,
            "description": "下拉列表组件\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar Select=components.Select;\nvar SelectDemo=React.createClass(\n    render:function(){\n        return (<Select data={this.state.selectData} defaultValue=\"2\" onSelect={this._onSelect}/>);\n    }\n);\n\n使用说明\n <Select data={this.state.selectData} defaultValue=\"2\" onSelect={this._onSelect}/>\n disName:显示在左边的名称\n data:select的下拉列表要显示的值,数据格式为：[{value:'1',text:'显示2'},{value:'2',text:'显示1'}]\n defaultValue:默认要显示的值\n onSelect：选重下拉列表的值所触发的事件\n multiple:true\n 支持多选\n noEmptyMsg:true\n 不显示默认提示\n```"
        },
        "Textarea": {
            "name": "Textarea",
            "shortname": "Textarea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "html",
            "namespace": "",
            "file": "components\\html\\textarea.js",
            "line": 6,
            "description": "文本区\n```\n <Textarea rows=\"4\" onChange={this.textareaChange}>\n       12234\n   </Textarea>\n```"
        },
        "message": {
            "name": "message",
            "shortname": "message",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "message",
            "namespace": "",
            "file": "components\\message\\message.js",
            "line": 9,
            "description": "这是一个MessageBox对象，提供显示消息的方法",
            "deprecated": true
        },
        "MessageBox": {
            "name": "MessageBox",
            "shortname": "MessageBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "message",
            "namespace": "",
            "file": "components\\message\\messageBox.js",
            "line": 10,
            "description": "消息提示框组件\n```\n<Button btnName=\"触发MessageBox\" doAction={MessageBox.show.bind(null,\"i am title\",\"i am message\")} cssClass=\"btn-info\" />\n!!请勿实例化此组件,仅可使用show方法显示提示框!!\n```"
        },
        "Modal": {
            "name": "Modal",
            "shortname": "Modal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "message",
            "namespace": "",
            "file": "components\\message\\modal.js",
            "line": 6,
            "description": "```\n <Modal title=\"i am title\" body={this._modalBody} footer={this._ModalFooter}/>\n targetName:需要在触发模态框的元素需给属性data-toggle=\"modal\" data-target=\"#targetName\" 或者使用jquery:$(\"#targetName\").modal\n title:标题\n body:中间显示的内容\n footer:底部显示的内容,一般来说至少需要一个确认按钮一个取消按钮\n```\nModal组件"
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "message",
            "namespace": "",
            "file": "components\\page\\grid.js",
            "line": 5,
            "description": "表格组件,是`TablePanel`的组成部分\n```\n示例:\n<Grid title={this.props.title} noHasCheckBox={this.props.noHasCheckBox} jsonKey={this.props.jsonKey} data={this.props.data} checkType={this.props.checkType}/>\n```"
        },
        "Pager": {
            "name": "Pager",
            "shortname": "Pager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "components\\page\\page.js",
            "line": 20,
            "description": "替代react-bootstrap中的组件, 内部组件, 请勿调用."
        },
        "PageButton": {
            "name": "PageButton",
            "shortname": "PageButton",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "components\\page\\page.js",
            "line": 52,
            "description": "分页器组件,是`TablePanel`的组成部分\n```\n示例:\n<PageButton  doList={this.props.doList}  pageSize={this.props.pageSize}  page={this.props.offset} totalRows={this.props.totalRows}/>\n```"
        },
        "PageItem": {
            "name": "PageItem",
            "shortname": "PageItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "components\\page\\page.js",
            "line": 34,
            "description": "替代react-bootstrap中的组件, 内部组件, 请勿调用."
        },
        "PageSizeSelect": {
            "name": "PageSizeSelect",
            "shortname": "PageSizeSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "page",
            "namespace": "",
            "file": "components\\page\\pagesizeselect.js",
            "line": 7,
            "description": "页面大小选择组件\n```\n使用方法\n参考TablePanel 组件\n使用说明\n <PageSizeSelect onselect={this._selectPageSize} />\n 其中onselect事件是回调分页所在parent中执行分页查询的方法，该方法会把所选的当前的分页大小传过去\n```"
        },
        "Header": {
            "name": "Header",
            "shortname": "Header",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel",
            "namespace": "",
            "file": "components\\panel\\header.js",
            "line": 6,
            "description": "BSS页面头部组件, 在BSSPanel中使用, 一般不单独使用.\n```\n<Header pageTitle={name} />\n```"
        },
        "BSSPanel": {
            "name": "BSSPanel",
            "shortname": "BSSPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel",
            "namespace": "",
            "file": "components\\panel\\panel.js",
            "line": 6,
            "description": "基本的面板组件\n```\nvar React = components.React;\nvar BSSPanel=components.BSSPanel;\nvar QueryPanel=components.QueryPanel;\nvar Input=components.Input;\nvar ToolBarPanel=components.ToolBarPanel;\nvar Button=components.Button;\n\nvar BSSPanelDemo=React.createClass(\n    render:function(){\n        return ( <BSSPanel pageTitle = \"示例Panel\">\n                <QueryPanel submitAction={queryMetadata} jsonFormat={true} okButtonName=\"查询(请看console)\">\n                <Input disName=\" 示范输入:\" name=\"demoInput\"/>\n                </QueryPanel>\n                <ToolBarPanel>\n                <Button btnName=\"增删查改\"/>\n                </ToolBarPanel>\n                </BSSPanel>);\n    }\n);\n```",
            "uses": [
                "Heafer"
            ]
        },
        "QueryPanel": {
            "name": "QueryPanel",
            "shortname": "QueryPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel",
            "namespace": "",
            "file": "components\\panel\\query-panel.js",
            "line": 8,
            "description": "查询面板,包装了form表单\n```\n使用方法\nvar React = components.React;\nvar QueryPanel=components.QueryPanel;\nvar Input=components.Input;\nvar AutocompleteDemo=React.createClass(\n    render:function(){\n    return (<QueryPanel submitAction={queryMetadata} jsonFormat={true} okButtonName=\"查询(请看console)\">\n               <Input disName=\" 示范输入:\" name=\"demoInput\"/>\n          </QueryPanel>);\n    }\n);\n使用说明\n<QueryPanel submitAction={queryMetadata} jsonFormat={true} okButtonName=\"查询(请看console)\">\n     <Input disName=\" 示范输入:\" name=\"demoInput\"/>\n </QueryPanel>\n\n```"
        },
        "TablePanel": {
            "name": "TablePanel",
            "shortname": "TablePanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TablePanel",
            "namespace": "",
            "file": "components\\panel\\table-panel.js",
            "line": 9,
            "description": "封装表格面板组件\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar TablePanel=components.TablePanel;\nvar TablePanelDemo=React.createClass(\n    render:function(){\n    tableProps:{\n        title:['选项','标题1','标题2','标题3'],\n        jsonKey:['id','t1','t2','t3'],\n        data:[{id:1,\n          t1:'测试1',\n          t2:'测试2',\n          t3:'测试3'}],\n        doList:function(){},\n        pageSize:10,\n        offset:1, //page:this.state.offset\n        totalRows:1,\n        checkType:\"radio\",\n    }\n        return (<TablePanel {...tableProps}/>);\n    }\n);\n\n使用说明\ntableProps:{\n        title:['选项','标题1','标题2','标题3'],\n       jsonKey:['id','t1','t2','t3'],\n        data:[{id:1,\n          t1:'测试1',\n          t2:'测试2',\n          t3:'测试3'}],\n        doList:function(){},\n        pageSize:10,\n        offset:1, //page:this.state.offset\n        totalRows:1,\n        checkType:\"radio\",\n    }\n```"
        },
        "ToolBarPanel": {
            "name": "ToolBarPanel",
            "shortname": "ToolBarPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel",
            "namespace": "",
            "file": "components\\panel\\tool-panel.js",
            "line": 6,
            "description": "工具栏面板\n```\n使用方法\nvar React = require('react');\nvar components=require(\"components\");\nvar ToolBarPanel=components.ToolBarPanel;\nvar Button=components.Button;\nvar ToolBarPanelDemo=React.createClass(\n    render:function(){\n        return ( <ToolBarPanel><Button btnName=\"增删查改\"/></ToolBarPanel>);\n    }\n);\n使用说明\n <ToolBarPanel>\n<Button btnName=\"增删查改\"/>\n</ToolBarPanel>\n```"
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tabs",
            "namespace": "",
            "file": "components\\tabs\\tab.js",
            "line": 8,
            "description": "标签组件, 仅可在`Tabs`组件中使用.\n```\n示例:\n<Tabs maxHeight=\"150px\">\n     <Tab title=\"111\" id=\"1\">\n         <p>456</p><p>456</p><p>456</p><p>456</p><p>456</p><p>456</p>\n     </Tab>\n     <Tab title=\"222\" id=\"2\" isActive={true}>\n         <p>789</p>\n     </Tab>\n</Tabs>\n-title: 显示在标签上的文字\n-id:    标签的id\n-isActive: 默认选中\n```"
        },
        "Tabs": {
            "name": "Tabs",
            "shortname": "Tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tabs",
            "namespace": "",
            "file": "components\\tabs\\tabs.js",
            "line": 7,
            "description": "标签页组件\n```\n<Tabs maxHeight=\"300px\">\n       <Tab title=\"111\" id=\"1\">\n           <p>456</p><p>456</p><p>456</p><p>456</p><p>456</p><p>456</p>\n       </Tab>\n       <Tab title=\"222\" id=\"2\" isActive={true}>\n           <p>789</p>\n       </Tab>\n   </Tabs>\n```"
        },
        "TencentMap": {
            "name": "TencentMap",
            "shortname": "TencentMap",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TencentMap",
            "namespace": "",
            "file": "components\\tencentMap\\map.js",
            "line": 8,
            "description": "地图基础类\n```\n\nvar markers =  [{x:116,y:30,description:'This is a description'},{x:117,y:31,description:'This is a description'}] <br/>\n<TencentMap id=\"map1\" mapData={markers} height={\"300px\"} width={\"300px\"} zoom={13} centerPoint={{x:116.397128,y:39.916527}}></TencentMap>\n\n```"
        },
        "window": {
            "name": "window",
            "shortname": "window",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "TencentMap",
            "namespace": ""
        },
        "TreeWithTable": {
            "name": "TreeWithTable",
            "shortname": "TreeWithTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "components\\tree\\treeWithTable.js",
            "line": 18,
            "description": "树和表格的组合组件\n**注意: 此组件尚未经过测试**\n```\n<TreeWithTable treeCheck={this.treeTableCheck} treeData={this.state.treeTableData}/>\n-treeData: 树形组件的数据, 请参考Treeview组件\n-treeCheck: 节点点击的回调函数\n    --(携带参数1) uid:选中节点的id\n    --(携带参数2) status:选中节点的状态\n-treeFlod: 节点点击的回调函数\n    --(携带参数1) uid:选中节点的id\n    --(携带参数2) status:选中节点的状态\n```"
        },
        "Treeview": {
            "name": "Treeview",
            "shortname": "Treeview",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "tree",
            "namespace": "",
            "file": "components\\tree\\treeview.js",
            "line": 9,
            "description": "树形组件\n```\n  使用说明\n  data: (object)树中展现的数据, 格式请参考demo.js, 每个节点可以有如下属性:\n   -\"name\":显示的名称.\n   -\"uid\":唯一的Id,注意,此ID必须唯一, 如果留空,则自动生成一个.\n   -\"selectType\":该节点的选择类型,可以为\"checkbox\"(节点可以多选,默认值),\"radio\"(在该级下单选),\"none\"(不显示选择框)\n   -\"isSelected\":(string)该节点默认被选中,默认值为\"none\",可选:\"all\",\"part\",\"none\"\n   -\"isExpanded\":(boolean)该节点默认被展开,默认值为flase.\n  selectType: (string)\n   -\"none\":树的每个节点前没有可操作的元素\n   -\"checkbox\":树的每个节点前有一个勾选框\n   -\"radio\":树的每个节点成为单选项\n  onElementCheck: (function)节点被勾选(取消勾选)时的回调函数.\n   -return parms:\n       -uid:目标节点的uid值,如果输入的data中没有标记uid,会返回一个唯一的随机字符串.\n       -status:目标节点操作状态, 'check'为勾选操作, 'unckeck'为取消勾选.\n       -name: 目标节点显示的内容\n  onElementFlod: (function)节点被展开(收起)时的回调函数.\n   -return params:\n       -uid:目标节点的uid值,如果输入的data中没有标记uid,会返回一个唯一的随机字符串.\n       -status:目标节点操作状态, 'flod'为收起操作, 'unckeck'为展开操作.\n  expandLevel: (int)展开级别\n  maxHeight:(string) 比如:\"300px\"\n\n   var tree1Data = {\n       treedata: [\n           {\n               \"name\": \"Top Level\",\n               \"uid\": \"uid1\",\n               \"children\": [\n                   {\n                       \"name\": \"Level 2: A\",\n                       \"uid\": \"uid2\",\n                       \"children\": [\n                           {\n                               \"name\": \"Son of A\"\n                           },\n                           {\n                               \"name\": \"Daughter of A\"\n                           }\n                       ]\n                   },\n                   {\n                       \"name\": \"Level 2: B\"\n                   },\n                   {\n                       \"name\": \"Level 2: C\",\n                       \"children\": [\n                           {\n                               \"name\": \"Son of C\"\n                           }\n                       ]\n                   }\n               ]\n           }\n       ]\n   }\n   <Treeview data={tree1Data} selectType=\"checkbox\"/>\n```"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "components\\BSSFrame\\sidebar.js",
            "line": 46,
            "description": "```\n示例:\n[{\"id\":\"bc373cb764484ab69dc27d827ec0e539\",\"name\":\"签到查询管理\",\"url\":\"\",\"parentId\":\"-1\",\"level\":null,\"children\":[{\"id\":\"0c7e6c00307b4063934cc6e293e580dd\",\"name\":\"签到查询\",\"url\":\"/mp/sign\",\"parentId\":\"bc373cb764484ab69dc27d827ec0e539\",\"level\":null,\"children\":[],\"btnRight\":{}}],\"btnRight\":{}},{\"id\":\"576ac42df3574c2b97b1eda80e553451\",\"name\":\"通用报表查询\",\"url\":\"\",\"parentId\":\"-1\",\"level\":null,\"children\":[{\"id\":\"75ff6fc071dd44d69b3677522eb26df0\",\"name\":\"统计报表\",\"url\":\"\",\"parentId\":\"576ac42df3574c2b97b1eda80e553451\",\"level\":null,\"children\":[{\"id\":\"75cee05cb0ac4047b44797d8ce31a21c\",\"name\":\"云公司列收统计表\",\"url\":\"/showReport/b857b799e2c646199efeaf4ca46993c9\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"c7909c55be7d4b43be5a11b00dca45a1\",\"name\":\"合同列收\",\"url\":\"/showReport/c3573aabc59f4324afc3fcbe8109460b\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"479527286c4343d7b12e31e1e39f6650\",\"name\":\"电商日发展量统计\",\"url\":\"/showReport/212550b3f1bd4e5e9f9cde1470b36046\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"b6b1a11956354d7c890c39f56156d68e\",\"name\":\"客户列收统计表\",\"url\":\"/showReport/304ffddde6954447b770abb489719e69\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"b4bbf43e86d04939ab144fc32efaebc2\",\"name\":\"加班餐月统计表\",\"url\":\"/showReport/e33972f5ccd340fd81e29e7284184c3f\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"99eb01f394c8496c904e1a49ec40d39e\",\"name\":\"O2O结算报表\",\"url\":\"/showReport/3eed9d09d86b456d8d0fc05dada24682\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"70865455a6244300b18de7f4d2b52fa6\",\"name\":\"到期用户统计\",\"url\":\"/showReport/52fb732fcd1a46daba796f15b918688a\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"f36145ed72fd495596db9f9fc74a317a\",\"name\":\"报表组(正在测试)\",\"url\":\"/showReportGroup/1\",\"parentId\":\"75ff6fc071dd44d69b3677522eb26df0\",\"level\":null,\"children\":[],\"btnRight\":{}}],\"btnRight\":{}},{\"id\":\"1c84d894db2747579f407262c53c8e2b\",\"name\":\"报表组管理\",\"url\":\"/report/manageReportGroup\",\"parentId\":\"576ac42df3574c2b97b1eda80e553451\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"3d24158fb8c3424e922d7fe18987af18\",\"name\":\"报表元数据管理\",\"url\":\"/report/metadata\",\"parentId\":\"576ac42df3574c2b97b1eda80e553451\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"9e0e3e45c1da487e9dae4640113fb0ec\",\"name\":\"通用报表配置管理\",\"url\":\"/report/config\",\"parentId\":\"576ac42df3574c2b97b1eda80e553451\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"f617cdec57414b46b24a836272ddae86\",\"name\":\"通用报表模板管理\",\"url\":\"/report/manage\",\"parentId\":\"576ac42df3574c2b97b1eda80e553451\",\"level\":null,\"children\":[],\"btnRight\":{}}],\"btnRight\":{}},{\"id\":\"0fe92edb3aee463baa98d0d98d733832\",\"name\":\"基础管理\",\"url\":\"\",\"parentId\":\"-1\",\"level\":null,\"children\":[{\"id\":\"1c5d0409bde94898a7533b21f0ef3337\",\"name\":\"用户组管理\",\"url\":\"/group/query\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"ac4686b108884fb5879098f6fa635e22\",\"name\":\"菜单管理\",\"url\":\"/module/query\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"66901e23eba74d00b3f03ba4aff3a7b5\",\"name\":\"日志管理\",\"url\":\"/log/querySystemOpertationLogInit\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"0524f63884f3440e9c1c5a9d2280357c\",\"name\":\"角色管理\",\"url\":\"/role/query\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"e572fcbd2b5c42e0b3ce6281e4e2fb7e\",\"name\":\"代码管理\",\"url\":\"/codeInfo/query\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"2ed2a975faba41f3a6d8440f2772e3ef\",\"name\":\"用户管理\",\"url\":\"/user/query\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}},{\"id\":\"1e2ecc37fedb4fc6b74f73bd828e4600\",\"name\":\"部门管理\",\"url\":\"/department/query\",\"parentId\":\"0fe92edb3aee463baa98d0d98d733832\",\"level\":null,\"children\":[],\"btnRight\":{}}],\"btnRight\":{}}]\n\n```",
            "itemtype": "property",
            "name": "list 目录结构",
            "type": "Array",
            "class": "SideBar",
            "module": "BSSFrame"
        },
        {
            "file": "components\\BSSFrame\\topbar.js",
            "line": 19,
            "itemtype": "property",
            "name": "logout 注销按钮的回调函数",
            "type": "Function",
            "class": "TopBar",
            "module": "BSSFrame"
        },
        {
            "file": "components\\BSSFrame\\topbar.js",
            "line": 25,
            "itemtype": "property",
            "name": "userName 显示的用户名",
            "type": "String",
            "default": "\"GUEST\"",
            "class": "TopBar",
            "module": "BSSFrame"
        },
        {
            "file": "components\\BSSFrame\\topbar.js",
            "line": 30,
            "itemtype": "property",
            "name": "title 显示的标题",
            "type": "String",
            "default": "\"电信云公司业务系统\"",
            "class": "TopBar",
            "module": "BSSFrame"
        },
        {
            "file": "components\\echarts\\components\\bar\\BasicColumn.js",
            "line": 61,
            "itemtype": "property",
            "name": "trigger 触发类型，默认数据触发，可选为：'item' | 'axis'，默认axis",
            "type": "String",
            "class": "BasicColumn",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\bar\\BasicColumn.js",
            "line": 68,
            "itemtype": "property",
            "name": "tooltipFormatter 格式化提示信息 (Template: a (series name), b(category value), c (value) ) eg : tooltipFormatter=\"Temperature : <br/>{b}km : {c}°C\"",
            "type": "String",
            "class": "BasicColumn",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\BasicArea.js",
            "line": 62,
            "itemtype": "property",
            "name": "trigger 触发类型，默认数据触发，可选为：'item' | 'axis'",
            "type": "String",
            "class": "BasicArea",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\BasicArea.js",
            "line": 70,
            "itemtype": "property",
            "name": "tooltipFormatter 格式化提示信息 (Template: a (series name), b(category value), c (value) ) eg : tooltipFormatter=\"Temperature : <br/>{b}km : {c}°C\"",
            "type": "String",
            "class": "BasicArea",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\BasicLine.js",
            "line": 63,
            "itemtype": "property",
            "name": "trigger 触发类型，默认数据触发，可选为：'item' | 'axis'，默认axis",
            "type": "String",
            "class": "BasicLine",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\BasicLine.js",
            "line": 70,
            "itemtype": "property",
            "name": "tooltipFormatter 格式化提示信息 (Template: a (series name), b(category value), c (value) ) eg : tooltipFormatter=\"Temperature : <br/>{b}km : {c}°C\"",
            "type": "String",
            "class": "BasicLine",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\IrregularLine.js",
            "line": 64,
            "itemtype": "property",
            "name": "tooltipFormatter 格式化提示信息 (Template: a (series name), b(category value), c (value) ) eg : tooltipFormatter=\"Temperature : <br/>{b}km : {c}°C\"",
            "type": "String",
            "class": "IrregularLine",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\StackedLine.js",
            "line": 63,
            "itemtype": "property",
            "name": "trigger 触发类型，默认数据触发，可选为：'item' | 'axis'",
            "type": "String",
            "class": "StackedLine",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\line\\StackedLine.js",
            "line": 70,
            "itemtype": "property",
            "name": "tooltipFormatter 格式化提示信息 (Template: a (series name), b(category value), c (value) ) eg : tooltipFormatter=\"Temperature : <br/>{b}km : {c}°C\"",
            "type": "String",
            "class": "StackedLine",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 19,
            "description": "获得该组件的报表引用",
            "static": 1,
            "itemtype": "method",
            "name": "getChart",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 75,
            "itemtype": "property",
            "name": "theme 主题类型，默认defalut",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 80,
            "itemtype": "property",
            "name": "height 图表高度，默认500px",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 84,
            "itemtype": "property",
            "name": "width 图表宽度，默认100%",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 89,
            "itemtype": "property",
            "name": "title 主标题",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 93,
            "itemtype": "property",
            "name": "subtitle 副标题",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 98,
            "itemtype": "property",
            "name": "xAxisName 横坐标名称",
            "type": "Array",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 102,
            "itemtype": "property",
            "name": "smooth 曲线是否平滑,可选值：(true|false) 默认true",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 107,
            "itemtype": "property",
            "name": "maxPoints 一个图最大能够显示的坐标点，超过部分将隐藏起来，可以通过滚动条查看数据,默认20个点",
            "type": "String",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 112,
            "itemtype": "property",
            "name": "data 传入的数据，具体传入格式请看对应的类说明",
            "type": "Array",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\components\\AbstractECharts.js",
            "line": 116,
            "itemtype": "property",
            "name": "cssClass 默认样式",
            "type": "Object",
            "class": "AbstractECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\echarts\\echarts.js",
            "line": 106,
            "itemtype": "property",
            "name": "option 图表配置，具体配置请见echart官网",
            "type": "Object",
            "class": "ECharts",
            "module": "ECharts"
        },
        {
            "file": "components\\html\\autocomplete.js",
            "line": 38,
            "description": "返回所有已选中的值",
            "static": 1,
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "返回所有的已选择的值",
                "type": "String"
            },
            "class": "Autocomplete",
            "module": "html"
        },
        {
            "file": "components\\html\\autocomplete.js",
            "line": 56,
            "itemtype": "property",
            "name": "url ajax请求URL",
            "type": "String",
            "class": "Autocomplete",
            "module": "html"
        },
        {
            "file": "components\\html\\autocomplete.js",
            "line": 63,
            "itemtype": "property",
            "name": "id id",
            "type": "String",
            "class": "Autocomplete",
            "module": "html"
        },
        {
            "file": "components\\html\\autocomplete.js",
            "line": 69,
            "itemtype": "property",
            "name": "name 显示的名称",
            "type": "String",
            "required": 1,
            "class": "Autocomplete",
            "module": "html"
        },
        {
            "file": "components\\html\\autoselect.js",
            "line": 45,
            "itemtype": "property",
            "name": "url 取数据的URL",
            "type": "String",
            "class": "AutoSelect",
            "module": "html"
        },
        {
            "file": "components\\html\\autoselect.js",
            "line": 53,
            "itemtype": "property",
            "name": "onSelect 选中选项时的回调函数, 包含一个参数:选中的value",
            "type": "Function",
            "class": "AutoSelect",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 56,
            "itemtype": "property",
            "name": "doAction 点击按钮时的回调函数",
            "type": "Function",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 64,
            "itemtype": "property",
            "name": "type 按钮类型,一般不需要传入",
            "type": "String",
            "default": "\"button\"",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 73,
            "itemtype": "property",
            "name": "disabled 是否禁用",
            "type": "Boolean",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 77,
            "description": "```\n可选值包括:\n            btn-default : 白色按钮样式;\n            btn-primary : 蓝色按钮, 如果不传入此参数,取此值为默认值;\n            btn-success : 绿色按钮, 一般表示成功;\n            btn-info    : 浅蓝色按钮, 一般表示信息;\n            btn-warning : 橙色按钮, 一般表示警告;\n            btn-danger  : 红色按钮, 一般表示严重警告;\n            btn-lg      : 尺寸设置为大;\n            btn-sm      : 尺寸设置为小;\n            btn-xs      : 尺寸设置为极小;\n            btn-block   : 尺寸将填充满父元素;\n            active      : 按钮将直接显示为已被按下.\n          ```",
            "itemtype": "property",
            "name": "cssClass 用于指定css样式的Class",
            "type": "String",
            "default": "\"btn-primary\"",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 101,
            "itemtype": "property",
            "name": "btnName 显示名称",
            "type": "String",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 106,
            "itemtype": "property",
            "name": "actions 该菜单所拥有的的操作",
            "type": "Function",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\button.js",
            "line": 110,
            "itemtype": "property",
            "name": "code 该按钮对应的操作编码",
            "type": "{[type]}",
            "class": "Button",
            "module": "html"
        },
        {
            "file": "components\\html\\checkbox.js",
            "line": 19,
            "itemtype": "property",
            "name": "id 对应html中的id",
            "type": "String",
            "class": "Checkbox",
            "module": "html"
        },
        {
            "file": "components\\html\\checkbox.js",
            "line": 23,
            "itemtype": "property",
            "name": "value 对应html中的value",
            "type": "String",
            "class": "Checkbox",
            "module": "html"
        },
        {
            "file": "components\\html\\checkbox.js",
            "line": 27,
            "description": "**注意: 在父组件CheckboxGroup中传入`multi`参数会覆盖其中所有Checkbox的`type`, 按照正常使用情况, 不应该给Checkbox传入type!**\n```\n可选值:\n\"checkbox\":  复选框\n\"radio\"   :  单选框\n```",
            "itemtype": "property",
            "name": "type 类型",
            "type": "String",
            "class": "Checkbox",
            "module": "html"
        },
        {
            "file": "components\\html\\checkbox.js",
            "line": 37,
            "description": "**注意: 在父组件CheckboxGroup中传入`name`参数会覆盖其中所有Checkbox的`name`, 按照正常使用情况, 不应该给Checkbox传入name!**",
            "itemtype": "property",
            "name": "name 对应html的name",
            "type": "String",
            "class": "Checkbox",
            "module": "html"
        },
        {
            "file": "components\\html\\checkbox.js",
            "line": 42,
            "itemtype": "property",
            "name": "dispName 显示的文字",
            "type": "String",
            "class": "Checkbox",
            "module": "html"
        },
        {
            "file": "components\\html\\checkbox.js",
            "line": 46,
            "description": "```\n携带两个参数:\n1. 点击项的name\n2. 点击项的value\n```",
            "itemtype": "property",
            "name": "onClick 进行选择时的回调函数",
            "type": "Function",
            "class": "Checkbox",
            "module": "html"
        },
        {
            "file": "components\\html\\checkboxgroup.js",
            "line": 22,
            "description": "覆盖所有子组件Checkbox的name",
            "itemtype": "property",
            "name": "name 所有选项的name",
            "type": "String",
            "class": "CheckboxGroup",
            "module": "html"
        },
        {
            "file": "components\\html\\checkboxgroup.js",
            "line": 27,
            "itemtype": "property",
            "name": "inline 是否内联显示",
            "type": "Boolean",
            "default": "false",
            "class": "CheckboxGroup",
            "module": "html"
        },
        {
            "file": "components\\html\\checkboxgroup.js",
            "line": 32,
            "itemtype": "property",
            "name": "multi 是否为多选",
            "type": "Boolean",
            "default": "true",
            "class": "CheckboxGroup",
            "module": "html"
        },
        {
            "file": "components\\html\\datepicker.js",
            "line": 33,
            "static": 1,
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "id",
                    "description": "日期控件所在id"
                }
            ],
            "return": {
                "description": "返回选择的日期值",
                "type": "String"
            },
            "class": "DatePicker",
            "module": "html"
        },
        {
            "file": "components\\html\\input.js",
            "line": 53,
            "description": "不携带参数",
            "itemtype": "property",
            "name": "onClick 点击事件",
            "type": "Function",
            "class": "Input",
            "module": "html"
        },
        {
            "file": "components\\html\\input.js",
            "line": 58,
            "description": "默认样式\n```\n可选值:\n\"input-nm\":  普通(宽120px)\n\"input-md\":  较小(宽70px)\n\"input-xs\":  非常小(宽30px)\n```",
            "itemtype": "property",
            "name": "cssClass 用于css样式的class",
            "type": "String",
            "defualt": "\"input-nm\"",
            "class": "Input",
            "module": "html"
        },
        {
            "file": "components\\html\\input.js",
            "line": 71,
            "itemtype": "property",
            "name": "isPassword  是否为密码框",
            "type": "Boolean",
            "default": "false",
            "class": "Input",
            "module": "html"
        },
        {
            "file": "components\\html\\input.js",
            "line": 89,
            "itemtype": "property",
            "name": "value 默认值",
            "type": "String",
            "class": "Input",
            "module": "html"
        },
        {
            "file": "components\\html\\input.js",
            "line": 144,
            "itemtype": "property",
            "name": "errorMsg 错误提示信息",
            "type": "String",
            "uses": [
                "BSSForm"
            ],
            "class": "Input",
            "module": "html"
        },
        {
            "file": "components\\html\\input.js",
            "line": 148,
            "description": "```\n可选值:\n\"number\" : 数字\n```",
            "itemtype": "property",
            "name": "reg 正则规则",
            "type": "String",
            "class": "Input",
            "module": "html"
        },
        {
            "file": "components\\html\\textarea.js",
            "line": 24,
            "itemtype": "property",
            "name": "name 显示在左边的名称",
            "type": "String",
            "default": "\"\"",
            "class": "Textarea",
            "module": "html"
        },
        {
            "file": "components\\html\\textarea.js",
            "line": 29,
            "itemtype": "property",
            "name": "rows 行数",
            "type": "String",
            "default": "\"3\"",
            "class": "Textarea",
            "module": "html"
        },
        {
            "file": "components\\html\\textarea.js",
            "line": 34,
            "itemtype": "property",
            "name": "onChange 文本编辑时的回调函数",
            "type": "Function",
            "class": "Textarea",
            "module": "html"
        },
        {
            "file": "components\\message\\message.js",
            "line": 18,
            "description": "弹出提示框",
            "static": 1,
            "itemtype": "method",
            "name": "alert",
            "params": [
                {
                    "name": "text",
                    "description": "要显示的文字",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "要显示的对话框标题",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "回调函数",
                    "type": "Function"
                }
            ],
            "class": "message",
            "module": "message"
        },
        {
            "file": "components\\message\\message.js",
            "line": 59,
            "description": "显示等待对话框",
            "static": 1,
            "itemtype": "method",
            "name": "jqwait",
            "params": [
                {
                    "name": "text",
                    "description": "对话框中的提示文字",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "对话框的标题",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "回调函数",
                    "type": "Function"
                }
            ],
            "class": "message",
            "module": "message"
        },
        {
            "file": "components\\message\\message.js",
            "line": 94,
            "description": "关闭对话框",
            "static": 1,
            "itemtype": "method",
            "name": "close",
            "class": "message",
            "module": "message"
        },
        {
            "file": "components\\message\\message.js",
            "line": 107,
            "description": "打开对话框",
            "static": 1,
            "itemtype": "method",
            "name": "jqopen",
            "params": [
                {
                    "name": "url",
                    "description": "要打开的链接",
                    "type": "Strig"
                },
                {
                    "name": "id",
                    "description": "对话框的id标识，用于生成随机id",
                    "type": "Strig"
                },
                {
                    "name": "options",
                    "description": "对话框设置选项",
                    "type": "Strig"
                },
                {
                    "name": "title",
                    "description": "对话框标题",
                    "type": "Strig"
                }
            ],
            "class": "message",
            "module": "message"
        },
        {
            "file": "components\\message\\message.js",
            "line": 141,
            "description": "显示确认对话框",
            "static": 1,
            "itemtype": "method",
            "name": "jqconfirm",
            "params": [
                {
                    "name": "text",
                    "description": "要显示对话框的文字",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "要显示对话框的标题",
                    "type": "String"
                },
                {
                    "name": "fn1",
                    "description": "点击确定的回调函数",
                    "type": "String"
                },
                {
                    "name": "fn2",
                    "description": "点击取消的回调函数",
                    "type": "String"
                }
            ],
            "class": "message",
            "module": "message"
        },
        {
            "file": "components\\message\\messageBox.js",
            "line": 22,
            "description": "显示对话框",
            "static": 1,
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "title",
                    "description": "对话框标题",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "对话框内容",
                    "type": "String"
                }
            ],
            "class": "MessageBox",
            "module": "message"
        },
        {
            "file": "components\\message\\modal.js",
            "line": 19,
            "description": "显示对话框",
            "static": 1,
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "id",
                    "description": "对话框ID",
                    "type": "String"
                }
            ],
            "class": "Modal",
            "module": "message"
        },
        {
            "file": "components\\message\\modal.js",
            "line": 29,
            "description": "隐藏对话框",
            "static": 1,
            "itemtype": "method",
            "name": "hide",
            "params": [
                {
                    "name": "id",
                    "description": "对话框ID",
                    "type": "String"
                }
            ],
            "class": "Modal",
            "module": "message"
        },
        {
            "file": "components\\page\\grid.js",
            "line": 17,
            "description": "获取表格数据",
            "itemtype": "method",
            "name": "getCheckedValue",
            "static": 1,
            "return": {
                "description": "选中的数据",
                "type": "Array"
            },
            "class": "Grid",
            "module": "message"
        },
        {
            "file": "components\\page\\grid.js",
            "line": 36,
            "description": "清除表格数据",
            "itemtype": "method",
            "name": "cleanData",
            "static": 1,
            "class": "Grid",
            "module": "message"
        },
        {
            "file": "components\\page\\grid.js",
            "line": 79,
            "itemtype": "property",
            "name": "title 标题",
            "type": "String",
            "class": "Grid",
            "module": "message"
        },
        {
            "file": "components\\page\\grid.js",
            "line": 83,
            "itemtype": "property",
            "name": "jsonKey 表格表头",
            "type": "Array",
            "example": [
                "\n`jsonKey:['id','t1','t2','t3']`"
            ],
            "class": "Grid",
            "module": "message"
        },
        {
            "file": "components\\page\\grid.js",
            "line": 89,
            "itemtype": "property",
            "name": "data 表格数据",
            "type": "Array",
            "example": [
                "\n```\ndata:[{id:1,\n     t1:'测试1',\n     t2:'测试2',\n     t3:'测试3'}],\n```"
            ],
            "class": "Grid",
            "module": "message"
        },
        {
            "file": "components\\page\\grid.js",
            "line": 100,
            "description": "```\n可选值:\n1.\"radio\":   表格中的数据为单选\n2.\"select\":  表格中的数据被多选\n```",
            "itemtype": "property",
            "name": "checkType 表格每一行的类型",
            "type": "String",
            "class": "Grid",
            "module": "message"
        },
        {
            "file": "components\\page\\page.js",
            "line": 61,
            "itemtype": "property",
            "name": "doList 点击分页器的回调函数",
            "type": "Function",
            "class": "PageButton",
            "module": "page"
        },
        {
            "file": "components\\page\\page.js",
            "line": 64,
            "itemtype": "property",
            "name": "pageSize 总页数",
            "type": "Int",
            "class": "PageButton",
            "module": "page"
        },
        {
            "file": "components\\page\\page.js",
            "line": 67,
            "itemtype": "property",
            "name": "offset 当前页码",
            "type": "Int",
            "class": "PageButton",
            "module": "page"
        },
        {
            "file": "components\\page\\page.js",
            "line": 70,
            "itemtype": "property",
            "name": "totalRows 每页数据数量",
            "type": "Int",
            "class": "PageButton",
            "module": "page"
        },
        {
            "file": "components\\panel\\header.js",
            "line": 17,
            "itemtype": "property",
            "name": "root 根节点名称",
            "type": "String",
            "default": "\"首页\"",
            "class": "Header",
            "module": "panel"
        },
        {
            "file": "components\\panel\\header.js",
            "line": 22,
            "itemtype": "property",
            "name": "pageTitle 本页标题",
            "type": "String",
            "default": "\"(空)\"",
            "class": "Header",
            "module": "panel"
        },
        {
            "file": "components\\tabs\\tabs.js",
            "line": 28,
            "itemtype": "property",
            "name": "maxHeight 最大高度,超出此高度后出现滚动条",
            "type": "String",
            "default": "\"auto\"",
            "example": [
                "\n\"400px\""
            ],
            "class": "Tabs",
            "module": "tabs"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 19,
            "itemtype": "property",
            "name": "id 组件id",
            "type": "String",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 22,
            "itemtype": "property",
            "name": "height 高度 默认300px",
            "type": "String",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 25,
            "itemtype": "property",
            "name": "width  宽度 默认100%",
            "type": "String",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 28,
            "itemtype": "property",
            "name": "zoom  放大倍数，默认为7",
            "type": "Int",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 31,
            "itemtype": "property",
            "name": "centerPoint  传入初始化地图中心点位置 x:经度,y:维度 eg:centerPoint={{x:116.397128,y:39.916527}} 默认中心点为北京天安门",
            "type": "Object",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 34,
            "itemtype": "property",
            "name": "mapData 传入初始化位置标签 x:经度,y:维度,description:描述 eg:[{x:116,y:30,description:'This is a description'},{x:117,y:31,description:'This is a description'}]",
            "type": "Object",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 64,
            "description": "初始化地图,初始化中心点为北京天安门",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "initTencentMap",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 92,
            "description": "设置一组坐标点标签",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "setNewMarks",
            "params": [
                {
                    "name": "markers",
                    "description": "传入坐标标签数组 x:经度,y:维度,description:描述 eg:[{x:116,y:30,description:'This is a description'},{x:117,y:31,description:'This is a description'}]",
                    "type": "Array"
                }
            ],
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 106,
            "description": "设置坐标点标签",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "setNewMark",
            "params": [
                {
                    "name": "markers",
                    "description": "传入坐标标签数组 x:经度,y:维度,description:描述 eg:{x:116,y:30,description:'This is a description'}",
                    "type": "Object"
                }
            ],
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 137,
            "description": "加载地图脚本",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "loadMapScript",
            "class": "TencentMap",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 147,
            "description": "window全局方法,在地图脚本加载完后回调，同时定义2个全局方法方便设置坐标点",
            "itemtype": "method",
            "name": "loadMapScriptCallBack",
            "class": "window",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 154,
            "description": "window全局方法,设置新的位置标记",
            "itemtype": "method",
            "name": "setNewMark",
            "params": [
                {
                    "name": "mapId",
                    "description": "地图控件的ID",
                    "type": "String"
                },
                {
                    "name": "marker",
                    "description": "要标记的位置对象 x:经度,y:维度,description:描述 eg:{x:116,y:30,description:'This is a description'}",
                    "type": "Object"
                }
            ],
            "class": "window",
            "module": "TencentMap"
        },
        {
            "file": "components\\tencentMap\\map.js",
            "line": 185,
            "description": "window全局方法,设置一组新的位置标记",
            "itemtype": "method",
            "name": "setNewMarks",
            "params": [
                {
                    "name": "mapId",
                    "description": "地图控件的ID",
                    "type": "String"
                },
                {
                    "name": "markers",
                    "description": "要标记的位置对象数组 x:经度,y:维度,description:描述 eg:[{x:116,y:30,description:'This is a description'},{x:117,y:31,description:'This is a description'}]",
                    "type": "Array"
                }
            ],
            "class": "window",
            "module": "TencentMap"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " components\\html\\datepicker.js:33"
        },
        {
            "message": "unknown tag: defualt",
            "line": " components\\html\\input.js:58"
        }
    ]
}